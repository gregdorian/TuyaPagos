// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using co.Tuya.Infrastructure.Data.Model;

namespace co.Tuya.Infrastructure.Data.Migrations
{
    [DbContext(typeof(TuyaContext))]
    [Migration("20220121192348_corregidoProductoID")]
    partial class corregidoProductoID
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("co.Tuya.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("clienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdenCompraId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("clienteId");

                    b.HasIndex("OrdenCompraId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            clienteId = 1,
                            Apellidos = "Muñoz",
                            Ciudad = "Barbosa",
                            Direccion = "cra 35 #100-00",
                            FullName = "Muñoz, Carlos",
                            Nombres = "Carlos",
                            Telefono = "34654612"
                        },
                        new
                        {
                            clienteId = 2,
                            Apellidos = "Lara",
                            Ciudad = "Itagui",
                            Direccion = " clle 54 #40-00",
                            FullName = "Lara, Andres",
                            Nombres = "Andres",
                            Telefono = "4657712"
                        },
                        new
                        {
                            clienteId = 3,
                            Apellidos = "Lopez",
                            Ciudad = "Envigado",
                            Direccion = " cra 34 #50-00",
                            FullName = "Lopez, Pablo",
                            Nombres = "Pablo",
                            Telefono = "35488820"
                        },
                        new
                        {
                            clienteId = 4,
                            Apellidos = "Ruiz",
                            Ciudad = "Medellin",
                            Direccion = " cra 25 #84-00",
                            FullName = "Ruiz, Ana",
                            Nombres = "Ana",
                            Telefono = "65444777"
                        });
                });

            modelBuilder.Entity("co.Tuya.Domain.Entities.Logistica", b =>
                {
                    b.Property<int>("LogisticaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompañia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenCompraId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogisticaId");

                    b.ToTable("Logisticas");

                    b.HasData(
                        new
                        {
                            LogisticaId = 1,
                            Direccion = "cra 50 #100-00",
                            NombreCompañia = "Carlos",
                            OrdenCompraId = 0,
                            Telefono = "46134652"
                        },
                        new
                        {
                            LogisticaId = 2,
                            Direccion = " clle 4 #40-00",
                            NombreCompañia = "Andres",
                            OrdenCompraId = 0,
                            Telefono = "5746712"
                        },
                        new
                        {
                            LogisticaId = 3,
                            Direccion = " cra 45 #50-00",
                            NombreCompañia = "Pablo",
                            OrdenCompraId = 0,
                            Telefono = "35884820"
                        },
                        new
                        {
                            LogisticaId = 4,
                            Direccion = " cra 25 #84-00",
                            NombreCompañia = "Ana",
                            OrdenCompraId = 0,
                            Telefono = "44765477"
                        });
                });

            modelBuilder.Entity("co.Tuya.Domain.Entities.OrdenCompra", b =>
                {
                    b.Property<int>("OrdenCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("LogisticaId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrdenCompraId");

                    b.HasIndex("LogisticaId");

                    b.ToTable("OrdenesCompras");
                });

            modelBuilder.Entity("co.Tuya.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("productoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdenCompraId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("productoId");

                    b.HasIndex("OrdenCompraId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            productoId = 1,
                            Descripcion = "Mouse",
                            Precio = 3500m
                        },
                        new
                        {
                            productoId = 2,
                            Descripcion = "Teclado",
                            Precio = 50500m
                        },
                        new
                        {
                            productoId = 3,
                            Descripcion = "Pantalla",
                            Precio = 605000m
                        },
                        new
                        {
                            productoId = 4,
                            Descripcion = "Tablet",
                            Precio = 32500m
                        });
                });

            modelBuilder.Entity("co.Tuya.Domain.Entities.Cliente", b =>
                {
                    b.HasOne("co.Tuya.Domain.Entities.OrdenCompra", null)
                        .WithMany("Clientes")
                        .HasForeignKey("OrdenCompraId");
                });

            modelBuilder.Entity("co.Tuya.Domain.Entities.OrdenCompra", b =>
                {
                    b.HasOne("co.Tuya.Domain.Entities.Logistica", null)
                        .WithMany("OrdenesCompra")
                        .HasForeignKey("LogisticaId");
                });

            modelBuilder.Entity("co.Tuya.Domain.Entities.Producto", b =>
                {
                    b.HasOne("co.Tuya.Domain.Entities.OrdenCompra", null)
                        .WithMany("Productos")
                        .HasForeignKey("OrdenCompraId");
                });

            modelBuilder.Entity("co.Tuya.Domain.Entities.Logistica", b =>
                {
                    b.Navigation("OrdenesCompra");
                });

            modelBuilder.Entity("co.Tuya.Domain.Entities.OrdenCompra", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
